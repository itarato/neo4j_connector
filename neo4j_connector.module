<?php
/**
 * @file
 * Main module functions.
 */

use Drupal\neo4j_connector\Neo4JDrupal;

/**
 * Workaround to load the Neo4J PHP library. I've tried to use composer_manager module, but keeping Drupal8 core
 * up to date and the module without problems seemed impossible.
 * @todo fix ugly loading when there is a standard way of handling composer libraries in Drupal 8.
 */
require_once __DIR__ . '/vendor/autoload.php';

/**
 * Neo4J Drupal service getter shortcut.
 *
 * @return Neo4JDrupal
 */
function neo4j_connector_get_client() {
  return \Drupal::service('neo4j_connector');
}

/**
 * Implements hook_permission().
 */
function neo4j_connector_permission() {
  return array(
    'access neo4j graph information' => array(
      'title' => t('Access Neo4J graph information'),
      'description' => t('Access to the graph data regarding the Drupal content.'),
    ),
    'administer neo4j connector configuration' => array(
      'title' => t('Administer Neo4J connection'),
      'description' => t('Administer global settings for the graph database.'),
    ),
  );
}

/**
 * Delete all graph data.
 */
function neo4j_connector_purge_db() {
  // Delete all relationships.
  Neo4JDrupal::sharedInstance()->query("
    START n = node(*)
    MATCH (n)-[r]->()
    DELETE r
  ");

  // Delete all nodes.
  Neo4JDrupal::sharedInstance()->query("
    START n = node(*)
    DELETE n
  ");
}

function neo4j_connector_get_server_mapping_configuration() {
  return [
    'field_tags:entity:tid' => 'taxonomy_term',
    'uid:entity:uid' => 'user',
    'field_page_reference' => 'node',
  ];
}
