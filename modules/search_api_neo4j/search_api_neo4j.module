<?php

/**
 * Implements hook_neo4j_connector_properties_alter().
 */
function search_api_neo4j_neo4j_connector_properties_alter(array &$properties, \Drupal\search_api\Item\ItemInterface $item) {
  if (strpos($item->getDatasourceId(), 'entity') !== 0) {
    // Not an entity.
    return;
  }

  $entity = $item->getOriginalObject();

  switch ($entity->getEntityTypeId()) {
    case 'node':
      $properties['title'] = $entity->title[0]->getValue()['value'];
      break;

    case 'user':
      $properties['title'] = $entity->name[0]->getValue()['value'];
      $properties['mail'] = $entity->mail[0]->getValue()['value'];
      break;

    case 'taxonomy_term':
      $properties['title'] = $entity->name->value;
      break;
  }

  $properties['entity_id'] = $entity->id();
  $properties['entity_type'] = $entity->getEntityTypeId();
  $properties['entity_bundle'] = $entity->bundle();
}

/**
 * Implements hook_neo4j_connector_labels_alter().
 */
function search_api_neo4j_neo4j_connector_labels_alter(array &$labels, \Drupal\search_api\Item\ItemInterface $item) {
  if (strpos($item->getDatasourceId(), 'entity') !== 0) {
    return;
  }

  $entity = $item->getOriginalObject();
  $labels[] = $entity->getEntityTypeId();
}

/**
 * Implements hook_neo4j_connector_graph_node_update().
 */
function search_api_neo4j_neo4j_connector_graph_node_update(\Everyman\Neo4j\Node $graph_node, \Drupal\search_api\Item\ItemInterface $item) {
  if (strpos($item->getDatasourceId(), 'entity') !== 0) {
    return;
  }

  $entity = $item->getOriginalObject();

  foreach ($item->getFields() as $field) {
    /* @var $field_handler \Drupal\search_api_neo4j\Neo4JDrupalAbstractFieldHandler */
    $field_handler = \Drupal\search_api_neo4j\Neo4JDrupalFieldHandlerFactory::getInstance($field);
//    $field_handler->processFieldItem($entity);
  }

//  // Connect fields.
//  $field_instances = \Drupal::entityManager()->getFieldDefinitions($entity->getEntityTypeId(), $entity->bundle());
//  foreach ($field_instances as $field_machine_name => $field_instance) {
//    $field_info = \Drupal\field\Entity\FieldConfig::loadByName($entity->getEntityTypeId(), $field_machine_name);
//    if ($field_info && $neo4jFieldHandler = Neo4JDrupalFieldHandlerFactory::getInstance($field_info, $graph_node)) {
//      $neo4jFieldHandler->processFieldData($entity, $field_machine_name);
//    }
//  }

//  if ($entity->getEntityTypeId() == 'node') {
//    // Connect to author.
//    if ($uid = $entity->uid->value) {
//      $client = neo4j_connector_get_client();
//      $index_param = neo4j_entity_index_get_index_param(new IndexItem(NEO4J_ENTITY_INDEX_DOMAIN, "user:$uid"));
//      $client->connectOrCreate($graph_node, $index_param, NEO4J_ENTITY_INDEX_DOMAIN, "user:$uid", 'author');
//    }
//  }
}

//function search_api_neo4j_get_index_param_of_item(\Drupal\search_api\Item\ItemInterface $item) {
//  list($main_type) = explode(':', $item->getDatasourceId());
//
//  if ($main_type == 'entity') {
//    /* @var \Drupal\Core\Entity\EntityInterface $entity */
//    $entity = $item->getOriginalObject();
//    return new \Drupal\neo4j_connector\Neo4JIndexParam($item->getDatasourceId(), 'entity_id', $entity->id());
//  }
//
//  return FALSE;
//}
